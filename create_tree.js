// Copyright (c) 2015 Trustfall AB. Licensed as "Use-as-you-like-at-own-risk"

// This tool creates a directory tree with generated files.
"use strict";

var fs = require("fs");
var path = require("path");

var startDirectory = process.argv.length > 2 ? process.argv[2] : '.';
var directoryCount = process.argv.length > 3 ? process.argv[3] : 3;
var fileCount = process.argv.length > 4 ? process.argv[4] : 5;
var directoryDepth = process.argv.length > 5 ? process.argv[5] : 1;
console.log('Creating ' + directoryCount + '*' + directoryDepth + ' directories with ' + fileCount + ' files each under ' + startDirectory);

tryCreateFolder(startDirectory);
createFolder(startDirectory, directoryDepth, directoryCount, fileCount);



function createFolder(dirName, depth, directoryCount, fileCount) {
	depth--;

	for(var i=0;i<directoryCount;i++){
		var name = generateName();

		var newDir = path.join(dirName, name);
		tryCreateFolder(newDir);
		createFiles(newDir, fileCount);
		if(depth>0){
			createFolder(newDir, depth, directoryCount, fileCount);
		}
	}
}

function createFiles(dirName, fileCount){
	for(var i=0;i<fileCount;i++){
		var filePath = path.join(dirName, generateName()+'.js');
		var content = '//File generated by ' + process.argv[1] + '\n';
		fs.writeFileSync(filePath, content);
	}
}

function tryCreateFolder(dirName){
	if(!fs.existsSync(dirName))
		fs.mkdirSync(dirName);
}

function generateName(){
	var dictionary = 'abcdefghijklmnopqrstuvwxyz1234567890';
	var name = '';
	for(var i=0;i<8;i++){
		var next = Math.floor(Math.random() * dictionary.length);
		name += dictionary[next];
	}
	return name;
}
